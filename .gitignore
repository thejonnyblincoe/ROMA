# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
#wce*.ipynb
# C extensions
*.so
old_project_runs/
.claude
*.csv
old_projects/
# Runtime directory (contains all runtime files)
runtime/
experiments/
notebooks/

# Agent runtime data and cache (legacy - to be migrated)
.agent_cache/
.agent_projects/
.agent*

# Data directory
notebooks/data/

# Experiment outputs (new structure)
experiments/results/
experiments/emergency_backups/
experiments/configs/*.yaml
!experiments/configs/example_*.yaml

# Legacy output directories (to be migrated)
project_results/
emergency_backups/
emergency_backups/*

# Experiment archives
experiment_archives/

# Documentation files that shouldn't be in repo
CLAUDE.md
data_quality_analysis.md
*.txt

# Runtime logs and output
*.log
output.txt
current_run.log
research_agent.log

# Jupyter checkpoints
.ipynb_checkpoints

# Environment files
.env
.venv/
env/
venv/
.claude-sessions/
.

# PDM
.pdm.toml
.pdm-python
.pdm-build/

# Node modules (for frontend)
node_modules/

# Build outputs
dist/
build/
*.egg-info/

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Distribution / packaging
.Python
develop-eggs/
downloads/
eggs/
.eggs/
# Python lib directories only (not frontend lib)
/lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm-project.org/#use-with-ide
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

logs/*
docs/roma_v2_architecture/*
docs/roma_v2_final_implementation/*
docs/roma_v2_implementation_details/*
docs/roma_v2_architecture_decision_records/*
docs/roma_v2_implementation_plan/*
docs/roma_v2_implementation_details/*
docs/roma_v2_implementation_details/*

roma/outputs/*
